@page "/editar-cliente/{IdCliente:int}"
@inject HttpClient _http
@inject NavigationManager NavManager
@inject IConfiguration configuration

<h3>Edicion de Cliente</h3>

<FormularioCliente Titulo="Editar Cliente" OnValidSubmit="EditarPersona" cliente="@Cliente" TextoBoton="Editar Cliente"></FormularioCliente>

@code {
    [Parameter]
    public int IdCliente { get; set; }

    public Cliente? Cliente { get; set; } = new();

    Service? service { get; set; }

    protected override void OnInitialized()
    {
        CargarConfiguracion();

    }

    private void CargarConfiguracion()
    {
        service = configuration.GetSection("ServiceConfiguration").Get<ServiceConfiguration>()?["Backend"];
    }
    protected override async Task OnParametersSetAsync()
    {
        Endpoint endpoint = service?.Endpoints?["Obtener"] ?? throw new NullReferenceException("No se encontró el Endpoint");

        Cliente = JObject.Parse(await _http.GetStringAsync($"{service.BaseUri}{endpoint.Url}{IdCliente}"))?.SelectToken("response")?.ToObject<Cliente>();
    }

    async Task EditarPersona()
    {
        Endpoint endpoint = service?.Endpoints?["Editar"] ?? throw new NullReferenceException("No se encontró el Endpoint");

        var respuesta = await _http.PutAsJsonAsync($"{service.BaseUri}{endpoint.Url}", Cliente);

        if (respuesta.IsSuccessStatusCode)
        {
            NavManager.NavigateTo("index-clientes");
        }
    }
}
